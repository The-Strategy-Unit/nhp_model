"""Helper methods for the model package."""

import json

import numpy as np
import pandas as pd


def inrange(value: float, low: float = 0, high: float = 1) -> float:
    """Force a value to be in the interval [low, high].

    Args:
        value: The value we want to constrain to the interval.
        low: The minimum that `value` can be. Defaults to 0.
        high: The maximum that `value` can be. Defaults to 1.

    Returns:
        `value` constrained to the interval.
    """
    return max(low, min(high, value))


def rnorm(rng: np.random.Generator, low: float, high: float) -> float:
    """Create a single random normal value from a 80% confidence interval.

    Args:
        rng: A random number generator.
        low: The low estimate of our 80% confidence interval.
        high: The high estimate of our 80% confidence interval.

    Returns:
        A random normal value.
    """
    q = 2.563103  # generated by: 2 * norm.ppf(1 - (1 - 0.8) / 2)
    mean = (high + low) / 2
    stdev = (high - low) / q
    return rng.normal(mean, stdev)


def load_params(filename: str) -> dict:
    """Load a params file.

    Args:
        filename: The full name of the file that we wish to load.

    Returns:
        The model parameters.
    """
    with open(filename, "r", encoding="UTF-8") as prf:
        return json.load(prf)
