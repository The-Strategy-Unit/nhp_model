on:
  workflow_call:
    inputs:
      docker-tag:
        required: true
        default: dev
        type: string
      app-version:
        required: true
        default: dev
        type: string
      data-version:
        required: true
        default: dev
        type: string  
      latest:
        required: false
        default: false
        type: boolean
    secrets:
      AZURE_CREDENTIALS:
        required: true
      REGISTRY_LOGIN_SERVER:
        required: true
      REGISTRY_USERNAME:
        required: true
      REGISTRY_PASSWORD:
        required: true
      NHP_STORAGE_ACCOUNT:
        required: true

jobs:
  build-container:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v4

      - name: "Pull current dev version of image"
        run: |
          docker pull ghcr.io/the-strategy-unit/nhp_model:dev || true
          docker tag ghcr.io/the-strategy-unit/nhp_model:dev nhp_model

      - name: "Build Image"
        run: |
          docker build . -t nhp_model:${{ inputs.docker-tag }} \
            --cache-from nhp_model \
            --build-arg app_version=${{ inputs.app-version }} \
            --build-arg data_version=${{ inputs.data-version }}

      - name: Save Docker image to tarball
        run: docker save nhp_model:${{ inputs.docker-tag }} -o nhp_model.tar

      - name: Upload image tarball as artifact
        uses: actions/upload-artifact@v4
        with:
          name: nhp_model
          path: nhp_model.tar

      - name: Comment with artifact link
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            âœ… A new build is available.

            You can use the following to use the image in your local environment:

            ``` bash
            docker load -i nhp_model.tar
            ```

            [Download Artifact](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          edit-mode: replace

  deploy-ghcr:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs: ["build-container"]
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v4

      - name: Download image tarball
        uses: actions/download-artifact@v4
        with:
          name: nhp_model

      - name: Load Docker image from tarball
        run: docker load -i nhp_model.tar

      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: "Tag and push image"
        run: |
          docker tag nhp_model ghcr.io/the-strategy-unit/nhp_model:${{ inputs.docker-tag }}
          docker push ghcr.io/the-strategy-unit/nhp_model:${{ inputs.docker-tag }}
      
      - name: "Push latest"
        if: ${{ inputs.latest }}
        run: |
          docker tag ghcr.io/the-strategy-unit/nhp_model:${{ inputs.docker-tag }} ghcr.io/the-strategy-unit/nhp_model:latest
          docker push ghcr.io/the-strategy-unit/nhp_model:latest

  deploy-acr:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs: ["build-container"]
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v4
      - name: Download image tarball
        uses: actions/download-artifact@v4
        with:
          name: nhp_model

      - name: Load Docker image from tarball
        run: docker load -i nhp_model.tar

      - name: "Login via Azure CLI"
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: "Login to Azure Container Registry"
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: "Build image"
        run: |
          # include the storage account env var for the data for acr
          docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/nhp_model:${{ inputs.docker-tag }} \
            --cache-from nhp_model \
            --build-arg app_version=${{ inputs.app-version }} \
            --build-arg data_version=${{ inputs.data-version }} \
            --build-arg storage_account=${{ secrets.NHP_STORAGE_ACCOUNT }}
          
      - name: "Push image"
        run: |
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/nhp_model:${{ inputs.docker-tag }}

      - name: "Push latest"
        if: ${{ inputs.latest }}
        run: |
          docker tag ${{ secrets.REGISTRY_LOGIN_SERVER }}/nhp_model:${{ inputs.docker-tag }} ${{ secrets.REGISTRY_LOGIN_SERVER }}/nhp_model:latest
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/nhp_model:latest